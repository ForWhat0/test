{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/roman/projects/test/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";import _slicedToArray from\"/home/roman/projects/test/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import React,{useCallback,useEffect,useState}from'react';import styled from\"styled-components\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var GAME_HEIGHT=document.body.scrollHeight;var GAME_WIDTH=document.body.scrollWidth;var BIRD_INITIAL_POSITION=20*GAME_HEIGHT/100;var BIRD_HEIGHT=4*GAME_WIDTH/100;var BIRD_WIDTH=4*GAME_WIDTH/100;var BIRD_JUMP=12*GAME_WIDTH/100;var TUBE_WIDTH=16*GAME_WIDTH/100;var TUBE_GAP=24*GAME_WIDTH/100;var INITIAL_TOP_TUBE_HEIGHT=60*GAME_HEIGHT/100;var START='START';var EASY='EASY';var MEDIUM='MEDIUM';var HARD='HARD';var ULTRA_HARD='ULTRA_HARD';var DIFF_SETTINGS={START:{min:0,max:1,game_gravity:4,tube_speed:4,type:START},EASY:{min:2,max:5,game_gravity:5,tube_speed:5,type:EASY},MEDIUM:{min:6,max:10,game_gravity:6,tube_speed:6,type:MEDIUM},HARD:{min:11,max:20,game_gravity:7,tube_speed:7,type:HARD},ULTRA_HARD:{min:21,max:22,game_gravity:8,tube_speed:8,type:ULTRA_HARD}};function between(x,min,max){return x>=min&&x<=max;}function App(){var _useState=useState(DIFF_SETTINGS.START.type),_useState2=_slicedToArray(_useState,2),diff=_useState2[0],setDiff=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),gameIsStarted=_useState4[0],setGameIsStarted=_useState4[1];var _useState5=useState(BIRD_INITIAL_POSITION),_useState6=_slicedToArray(_useState5,2),birdPosition=_useState6[0],setBirdPosition=_useState6[1];var _useState7=useState(GAME_WIDTH-TUBE_WIDTH),_useState8=_slicedToArray(_useState7,2),tubePosition=_useState8[0],setTubePosition=_useState8[1];var _useState9=useState(INITIAL_TOP_TUBE_HEIGHT),_useState10=_slicedToArray(_useState9,2),topTubeHeight=_useState10[0],setTopTubeHeight=_useState10[1];var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),score=_useState12[0],setScore=_useState12[1];var bottomTubeHeight=GAME_HEIGHT-TUBE_GAP-topTubeHeight;useEffect(function(){if(!gameIsStarted)return;var intervalId;if(birdPosition<GAME_HEIGHT-BIRD_HEIGHT){intervalId=setInterval(function(){setBirdPosition(function(oldPosition){return oldPosition+DIFF_SETTINGS[diff].game_gravity;});},24);}return function(){clearInterval(intervalId);};},[birdPosition,gameIsStarted,diff]);useEffect(function(){if(!gameIsStarted)return;var intervalId;if(tubePosition>=-TUBE_WIDTH){intervalId=setInterval(function(){setTubePosition(function(oldPosition){return oldPosition-DIFF_SETTINGS[diff].tube_speed;});},24);return function(){clearInterval(intervalId);};}else{setTopTubeHeight(Math.floor(Math.random()*(GAME_HEIGHT-TUBE_GAP)));setTubePosition(GAME_WIDTH+TUBE_WIDTH);setScore(function(oldScore){return++oldScore;});}},[tubePosition,gameIsStarted,diff]);useEffect(function(){if(gameIsStarted&&BIRD_WIDTH>=tubePosition){var hitTop=between(birdPosition,0,topTubeHeight);var hitBottom=between(birdPosition,topTubeHeight+TUBE_GAP-BIRD_HEIGHT,GAME_HEIGHT);if(hitTop||hitBottom)setGameIsStarted(false);}},[tubePosition,gameIsStarted,birdPosition]);useEffect(function(){if(!gameIsStarted)return;for(var key in DIFF_SETTINGS){if(between(score,DIFF_SETTINGS[key].min,DIFF_SETTINGS[key].max)){setDiff(DIFF_SETTINGS[key].type);break;}}},[gameIsStarted,score]);var handleClick=useCallback(function(){if(!gameIsStarted){setGameIsStarted(true);setDiff(DIFF_SETTINGS.EASY.type);setBirdPosition(BIRD_INITIAL_POSITION);setTubePosition(GAME_WIDTH+TUBE_WIDTH);setScore(0);}else{var newPosition=birdPosition-BIRD_JUMP;if(newPosition>0){setBirdPosition(birdPosition-BIRD_JUMP);}else{setBirdPosition(0);}}},[gameIsStarted,birdPosition]);return/*#__PURE__*/_jsxs(Game,{onClick:handleClick,children:[/*#__PURE__*/_jsx(Score,{score:score}),/*#__PURE__*/_jsx(Bird,{top:birdPosition}),/*#__PURE__*/_jsx(Tube,{width:TUBE_WIDTH,top:0,left:tubePosition,height:topTubeHeight}),/*#__PURE__*/_jsx(Tube,{width:TUBE_WIDTH,top:GAME_HEIGHT-bottomTubeHeight,left:tubePosition,height:bottomTubeHeight})]});}export default App;var Game=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  position: relative;\\n  background: yellow;\\n  width: \",\"px;\\n  height: \",\"px;\\n  display: flex;\\n  margin: 0 auto;\\n  overflow: hidden;\\n  cursor: pointer;\\n\"])),GAME_WIDTH,GAME_HEIGHT);var Bird=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  left: 0;\\n  top: \",\"px;\\n  height: \",\"px;\\n  width: \",\"px;\\n  background: blue;\\n\"])),function(props){return props.top;},BIRD_HEIGHT,BIRD_WIDTH);var Tube=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  height: \",\"px;\\n  width: \",\"px;\\n  left: \",\"px;\\n  top: \",\"px;\\n  background: green;\\n\"])),function(props){return props.height;},TUBE_WIDTH,function(props){return props.left;},function(props){return props.top;});var Score=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  font-size: 24px;\\n  color: red;\\n  margin: 20px auto;\\n  z-index: 100;\\n\\n  &:after {\\n    content: '\",\"';\\n  }\\n\"])),function(props){return props.score;});","map":{"version":3,"names":["React","useCallback","useEffect","useState","styled","jsx","_jsx","jsxs","_jsxs","GAME_HEIGHT","document","body","scrollHeight","GAME_WIDTH","scrollWidth","BIRD_INITIAL_POSITION","BIRD_HEIGHT","BIRD_WIDTH","BIRD_JUMP","TUBE_WIDTH","TUBE_GAP","INITIAL_TOP_TUBE_HEIGHT","START","EASY","MEDIUM","HARD","ULTRA_HARD","DIFF_SETTINGS","min","max","game_gravity","tube_speed","type","between","x","App","_useState","_useState2","_slicedToArray","diff","setDiff","_useState3","_useState4","gameIsStarted","setGameIsStarted","_useState5","_useState6","birdPosition","setBirdPosition","_useState7","_useState8","tubePosition","setTubePosition","_useState9","_useState10","topTubeHeight","setTopTubeHeight","_useState11","_useState12","score","setScore","bottomTubeHeight","intervalId","setInterval","oldPosition","clearInterval","Math","floor","random","oldScore","hitTop","hitBottom","key","handleClick","newPosition","Game","onClick","children","Score","Bird","top","Tube","width","left","height","div","_templateObject","_taggedTemplateLiteral","_templateObject2","props","_templateObject3","_templateObject4"],"sources":["/home/roman/projects/test/src/App.js"],"sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\nimport styled from \"styled-components\";\n\nconst GAME_HEIGHT = document.body.scrollHeight;\nconst GAME_WIDTH = document.body.scrollWidth;\n\nconst BIRD_INITIAL_POSITION = 20 * GAME_HEIGHT / 100;\nconst BIRD_HEIGHT = 4 * GAME_WIDTH / 100;\nconst BIRD_WIDTH = 4 * GAME_WIDTH / 100;\nconst BIRD_JUMP = 12 * GAME_WIDTH / 100;\n\nconst TUBE_WIDTH = 16 * GAME_WIDTH / 100;\nconst TUBE_GAP =  24 * GAME_WIDTH / 100;\nconst INITIAL_TOP_TUBE_HEIGHT = 60 * GAME_HEIGHT / 100;\n\nconst START = 'START';\nconst EASY = 'EASY';\nconst MEDIUM = 'MEDIUM';\nconst HARD = 'HARD';\nconst ULTRA_HARD = 'ULTRA_HARD';\n\nconst DIFF_SETTINGS = {\n    START: {\n        min: 0,\n        max: 1,\n        game_gravity: 4,\n        tube_speed: 4,\n        type: START\n    },\n    EASY: {\n        min: 2,\n        max: 5,\n        game_gravity: 5,\n        tube_speed: 5,\n        type: EASY\n    },\n    MEDIUM: {\n        min: 6,\n        max: 10,\n        game_gravity: 6,\n        tube_speed: 6,\n        type: MEDIUM\n    },\n    HARD: {\n        min: 11,\n        max: 20,\n        game_gravity: 7,\n        tube_speed: 7,\n        type: HARD\n    },\n    ULTRA_HARD: {\n        min: 21,\n        max: 22,\n        game_gravity: 8,\n        tube_speed: 8,\n        type: ULTRA_HARD\n    },\n};\n\nfunction between(x, min, max) {\n    return x >= min && x <= max;\n}\n\nfunction App() {\n    const [diff, setDiff] = useState(DIFF_SETTINGS.START.type);\n    const [gameIsStarted, setGameIsStarted] = useState(false);\n    const [birdPosition, setBirdPosition] = useState(BIRD_INITIAL_POSITION);\n    const [tubePosition, setTubePosition] = useState(GAME_WIDTH - TUBE_WIDTH);\n    const [topTubeHeight, setTopTubeHeight] = useState(INITIAL_TOP_TUBE_HEIGHT);\n    const [score, setScore] = useState(0);\n\n    const bottomTubeHeight = GAME_HEIGHT - TUBE_GAP - topTubeHeight;\n\n    useEffect(() => {\n        if (!gameIsStarted) return;\n        let intervalId;\n        if (birdPosition < (GAME_HEIGHT - BIRD_HEIGHT)) {\n            intervalId = setInterval(() => {\n                setBirdPosition((oldPosition) => oldPosition + DIFF_SETTINGS[diff].game_gravity);\n            }, 24);\n        }\n\n        return () => {\n            clearInterval(intervalId);\n        };\n    }, [birdPosition, gameIsStarted, diff]);\n\n    useEffect(() => {\n        if (!gameIsStarted) return;\n        let intervalId;\n        if (tubePosition >= -TUBE_WIDTH) {\n            intervalId = setInterval(() => {\n                setTubePosition((oldPosition) => oldPosition - DIFF_SETTINGS[diff].tube_speed);\n            }, 24);\n\n            return () => {\n                clearInterval(intervalId);\n            };\n        } else {\n            setTopTubeHeight(Math.floor(Math.random() * (GAME_HEIGHT - TUBE_GAP)));\n            setTubePosition(GAME_WIDTH + TUBE_WIDTH);\n            setScore((oldScore) => ++oldScore)\n        }\n    }, [tubePosition, gameIsStarted, diff]);\n\n    useEffect(() => {\n        if (gameIsStarted && BIRD_WIDTH >= tubePosition) {\n            const hitTop = between(birdPosition, 0, topTubeHeight);\n            const hitBottom = between(birdPosition, topTubeHeight + TUBE_GAP - BIRD_HEIGHT, GAME_HEIGHT);\n\n            if (hitTop || hitBottom) setGameIsStarted(false);\n        }\n    }, [tubePosition, gameIsStarted, birdPosition]);\n\n    useEffect(() => {\n        if (!gameIsStarted) return;\n\n        for (const key in DIFF_SETTINGS) {\n            if (between(score,DIFF_SETTINGS[key].min, DIFF_SETTINGS[key].max))  {\n                setDiff(DIFF_SETTINGS[key].type);\n                break;\n            }\n        }\n    }, [gameIsStarted, score])\n\n    const handleClick = useCallback(() => {\n        if (!gameIsStarted) {\n            setGameIsStarted(true);\n            setDiff(DIFF_SETTINGS.EASY.type);\n            setBirdPosition(BIRD_INITIAL_POSITION);\n            setTubePosition(GAME_WIDTH + TUBE_WIDTH);\n            setScore(0);\n        } else {\n            const newPosition = birdPosition - BIRD_JUMP;\n            if (newPosition > 0) {\n                setBirdPosition(birdPosition - BIRD_JUMP)\n            } else {\n                setBirdPosition(0);\n            }\n        }\n    }, [gameIsStarted, birdPosition])\n\n    return (\n        <Game onClick={handleClick}>\n            <Score\n                score={score}\n            />\n            <Bird\n                top={birdPosition}\n            />\n            <Tube\n                width={TUBE_WIDTH}\n                top={0}\n                left={tubePosition}\n                height={topTubeHeight}\n            />\n            <Tube\n                width={TUBE_WIDTH}\n                top={GAME_HEIGHT - bottomTubeHeight}\n                left={tubePosition}\n                height={bottomTubeHeight}\n            />\n        </Game>\n    );\n}\n\nexport default App;\n\n\nconst Game = styled.div`\n  position: relative;\n  background: yellow;\n  width: ${GAME_WIDTH}px;\n  height: ${GAME_HEIGHT}px;\n  display: flex;\n  margin: 0 auto;\n  overflow: hidden;\n  cursor: pointer;\n`\n\nconst Bird = styled.div`\n  position: absolute;\n  left: 0;\n  top: ${props => props.top}px;\n  height: ${BIRD_HEIGHT}px;\n  width: ${BIRD_WIDTH}px;\n  background: blue;\n`\n\nconst Tube = styled.div`\n  position: absolute;\n  height: ${props => props.height}px;\n  width: ${TUBE_WIDTH}px;\n  left: ${props => props.left}px;\n  top: ${props => props.top}px;\n  background: green;\n`\n\nconst Score = styled.div`\n  font-size: 24px;\n  color: red;\n  margin: 20px auto;\n  z-index: 100;\n\n  &:after {\n    content: '${props => props.score}';\n  }\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}